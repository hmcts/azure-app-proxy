resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'


variables:
  - name: timeoutInMinutes
    value: 60
  - name: subscription
    value: Reform-CFT-Mgmt
  - name: agentPool
    value: 'ubuntu-latest'
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: app-proxy
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
    - plan
    - apply

  - name: kvConnectedServiceName
    type: string
    default: DCD-CFT-Sandbox

  - name: environment_components
    type: object
    default:
    - deployment: 'azure_app_proxy_prod'
      environment: 'mgmt'
      component: 'app-proxy'
      service_connection: 'Reform-CFT-Mgmt'
      dependsOn: 'Precheck'

stages:
  - stage: Precheck
    jobs:
      - job:
        displayName: Precheck
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-token'
              serviceConnection: ${{ parameters.kvConnectedServiceName }}
              overrideAction: ${{ parameters.overrideAction }}

  - stage: 'Fetch login details for token'
    jobs:
      - job:
          displayName: 'Fetch Login From Azure Key Vault'
          steps:
            - task: AzureKeyVault@2
              displayName: 'Fetch Login From Azure Key Vault'
              inputs:
                azureSubscription: ${{ variables.subscription }}
                KeyVaultName: 'ReformMgmtKeyVault'
                SecretsFilter: 'azure-app-proxy-user-password, azure-app-proxy-user-email'
                RunAsPreJob: true

            - task: AzureCLI@2
              inputs:
                azureSubscription: ${{ variables.subscription }}
                scriptType: 'bash'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  az login --username $(azure-app-proxy-user-email) --password $(azure-app-proxy-user-password)
                  TOKEN=$(az account get-access-token --resource-type 'aad-graph' --scope 'https://proxy.cloudwebappproxy.net/registerapp/user_impersonation')
                  echo "Retrieved user token, setting as env var..."
                  echo "##vso[task.setvariable variable=TOKEN;issecret=true]$TOKEN"


  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}
              terraformEnvironmentVariables:
                TF_VAR_user_token: $(TOKEN)