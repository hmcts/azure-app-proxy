trigger:
  branches:
    include:
      - main
schedules:
  - cron: '0 6 * * Mon-Fri'
    displayName: Runs 6 AM Mon-Fri
    branches:
      include:
        - main
    always: 'true'
resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/dtspo-17345-reinstate-nagger-dw
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'





variables:
  - name: timeoutInMinutes
    value: 60
  - name: subscription
    value: Reform-CFT-Mgmt
  - name: agentPool
    value: 'ubuntu-latest'
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: app-proxy
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - name: registerServiceConnection
    value: GA
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
    - plan
    - apply

  - name: kvConnectedServiceName
    type: string
    default: DCD-CFT-Sandbox

  - name: environment_components
    type: object
    default:
    - deployment: 'app_proxy_infra'
      environment: 'mgmt'
      component: 'app-proxy'
      service_connection: 'Reform-CFT-Mgmt'
      dependsOn: 'Precheck'
    - deployment: 'dns_registration'
      environment: 'mgmt'
      component: 'dns'
      service_connection: 'Reform-CFT-Mgmt'
      dependsOn: 'app_proxy_infra'

stages:
  - stage: Precheck
    jobs:
      - job:
        displayName: Precheck
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-sp-token'
              serviceConnection: ${{ parameters.kvConnectedServiceName }}
              overrideAction: ${{ parameters.overrideAction }}

  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}
              
  - stage: registerapps
    dependsOn: "dns_registration"
    condition: and(succeeded(), eq(variables.isMain, true))
    jobs:
    - job: registerappsonappproxy
      pool:
        vmImage: ${{ variables.agentPool }}
      timeoutInMinutes: ${{ variables.timeoutInMinutes }}
      steps:
        - checkout: self
          clean: true
        - checkout: cnp-azuredevops-libraries
          clean: true
        - task: AzureCLI@2
          displayName: 'Register apps in app proxy'
          inputs:
            scriptType: bash
            scriptLocation: inlineScript
            azureSubscription: ${{ variables.registerServiceConnection }}
            workingDirectory: azure-app-proxy
            inlineScript: |
              yarn set version stable
              yarn dlx azure-app-proxy-manager --config apps.yaml

